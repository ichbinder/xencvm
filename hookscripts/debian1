#!/bin/sh

prefix=$1

#
#  Source our common functions
#
if [ -e /usr/share/xen-tools/common.sh ]; then
    . /usr/share/xen-tools/common.sh
else
    . ./hooks/common.sh
fi

#
# Log our start
#
logMessage Script $0 starting


#
#  Install packages
#
installDebianPackage ${prefix} postfix
installDebianPackage ${prefix} sudo
installDebianPackage ${prefix} nagios-plugins-basic
installDebianPackage ${prefix} nagios-nrpe-server
installDebianPackage ${prefix} libsys-statistics-linux-perl
installDebianPackage ${prefix} make
installDebianPackage ${prefix} binutils
installDebianPackage ${prefix} libreadline5
installDebianPackage ${prefix} libruby
installDebianPackage ${prefix} ruby
installDebianPackage ${prefix} unhide
installDebianPackage ${prefix} mailutils
installDebianPackage ${prefix} finger
installDebianPackage ${prefix} bash-completion
installDebianPackage ${prefix} ntp
installDebianPackage ${prefix} aptitude
installDebianPackage ${prefix} libsasl2-modules
installDebianPackage ${prefix} libperl-dev

#
# save sshd
#
# root no ssh login/etc/ssh/sshd_config
#
if [ -f ${prefix}/etc/ssh/sshd_config ]; then
    if sed -i 's/PermitRootLogin yes/PermitRootLogin no/' ${prefix}/etc/ssh/sshd_config; then
        logMessage "\n- successfully disabled root login\n"
    else
        logMessage "\n- failed to disable root login\n"
    fi

    if sed -i 's/RSAAuthentication yes/RSAAuthentication no/' ${prefix}/etc/ssh/sshd_config; then
        logMessage "\n- successfully disabled RSAAuthentification\n"
    else
        logMessage "\n- failed to disable RSAAuthentification\n"
    fi

    if sed -i 's/#AuthorizedKeysFile/AuthorizedKeysFile/' ${prefix}/etc/ssh/sshd_config; then
        logMessage "\n- successfully enable AuthorizedKeysFile\n"
    else
        logMessage "\n- failed to enable AuthorizedKeysFile\n"
    fi

    if sed -i 's/ChallengeResponseAuthentication yes/ChallengeResponseAuthentication no/' ${prefix}/etc/ssh/sshd_config; then
        logMessage "\n- successfully disabled ChallengeResponseAuthentication\n"
    else
        logMessage "\n- failed to disable ChallengeResponseAuthentication\n"
    fi

    if sed -i 's/#IgnoreUserKnownHosts/IgnoreUserKnownHosts/' ${prefix}/etc/ssh/sshd_config; then
        logMessage "\n- successfully enable IgnoreUserKnowHosts\n"
    else
        logMessage "\n- failed to enable IgnoreUserKnowHosts\n"
    fi

#    if sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' ${prefix}/etc/ssh/sshd_config; then
#        logMessage "\n- successfully disabled PasswordAuthentification\n"
#    else
#        logMessage "\n- failed to disable PasswordAuthentification\n"
#    fi

#    if sed -i 's/Port 22/Port 2223/' ${prefix}/etc/ssh/sshd_config; then
#        logMessage "\n- successfully set ssh Port\n"
#    else
#        logMessage "\n- failed set ssh Port\n"
#    fi

#	if chroot ${prefix} /usr/sbin/addgroup --system sshusers; then
#    	logMessage "\n- successfully added group sshusers\n"
#	else
#    	logMessage "\n- failed to add group sshusers\n"
#	fi

#    if echo "AllowGroups sshusers" >> ${prefix}/etc/ssh/sshd_config; then
#        logMessage "\n- successfully added group sshusers to ssh conf\n"
#    else
#        logMessage "\n- failed to add group sshusers to ssh conf\n"
#    fi
fi



#
# add user jakob
#
pj=$(openssl rand 1000 | strings | grep -io [[:alnum:]] | head -n 16 | tr -d '\n')
if chroot ${prefix} /usr/sbin/useradd -d /home/jakob -m -s /bin/bash -G sudo -p $(openssl passwd -1 "$pj") jakob; then
    logMessage "\n- successfully added jakob\n"
else
    logMessage "\n- failed to add jakob\n"
fi

if chroot ${prefix} /usr/sbin/usermod -a -G sudo jakob; then
    logMessage "\n- successfully added jakob to group sudo\n"
else
    logMessage "\n- failed to add jakob to group sudo\n"
fi

if mkdir ${prefix}/home/jakob/.ssh; then
    logMessage "\n- successfully added .ssh dir to jakob\n"
else
    logMessage "\n- failed to add .ssh dir to jakob\n"
fi

#if cp /home/jakob/create_vm/authorized_keys ${prefix}/home/jakob/.ssh/; then
#    logMessage "\n- successfully added ssh pub key to jakob\n"
#else
#    logMessage "\n- failed to add ssh pub key to jakob\n"
#fi

#if chmod 755 ${prefix}/home/jakob/.ssh/authorized_keys; then
#    logMessage "\n- successfully chmod authorized_keys\n"
#else
#    logMessage "\n- failed to chmod authorized_keys\n"
#fi

#if chroot ${prefix} /bin/chown jakob:jakob /home/jakob/.ssh/; then
#    logMessage "\n- successfully chown jakob to authorized_keys\n"
#else
#    logMessage "\n- failed to chown jakob to authorized_keys\n"
#fi

#if chroot ${prefix} /bin/chown jakob:jakob /home/jakob/.ssh/authorized_keys; then
#    logMessage "\n- successfully chown jakob to authorized_keys\n"
#else
#    logMessage "\n- failed to chown jakob to authorized_keys\n"
#fi

#if chroot ${prefix} /usr/sbin/usermod -a -G sshusers jakob; then
#    logMessage "\n- successfully added jakob to group sshusers\n"
#else
#	logMessage "\n- failed to add jakob to group sshusers\n"
#fi


#
# add Firewall dir
#
if mkdir ${prefix}/etc/fw; then
    logMessage "\n- successfully add Firewall dir\n"
else
    logMessage "\n- failed to add Firewall dir\n"
fi

if chown jakob:root ${prefix}/etc/fw; then
    logMessage "\n- successfully chown Firewall dir\n"
else
    logMessage "\n- failed to chown Firewall dir\n"
fi

if chmod 775 ${prefix}/etc/fw; then
    logMessage "\n- successfully chmod Firewall dir\n"
else
    logMessage "\n- failed to chmod Firewall dir\n"
fi



#
##########################################################################################################################
# # start install Nagios client
#
cd ${prefix}/tmp
if wget http://search.cpan.org/CPAN/authors/id/B/BL/BLOONIX/Sys-Statistics-Linux-0.66.tar.gz; then
    logMessage "\n- successfully download Sys-Statistics-Linux\n"
else
    logMessage "\n- failed to download Sys-Statistics-Linux\n"
fi

if tar xvzf Sys-Statistics-Linux-0.66.tar.gz; then
    logMessage "\n- successfully unzip Sys-Statistics-Linux\n"
else
    logMessage "\n- failed to unzip Sys-Statistics-Linux\n"
fi

cd ${prefix}/tmp/Sys-Statistics-Linux-0.66/
if chroot ${prefix} /bin/bash -c 'cd /tmp/Sys-Statistics-Linux-0.66/; perl Makefile.PL'; then
    logMessage "\n- successfully create makefile for Sys-Statistics-Linux\n"
else
    logMessage "\n- failed to create makefile for Sys-Statistics-Linux\n"
fi

if chroot ${prefix} make -C /tmp/Sys-Statistics-Linux-0.66/; then
    logMessage "\n- successfully compile Sys-Statistics-Linux\n"
else
    logMessage "\n- failed to compile Sys-Statistics-Linux\n"
fi

if chroot ${prefix} make -C /tmp/Sys-Statistics-Linux-0.66/ install; then
    logMessage "\n- successfully install Sys-Statistics-Linux\n"
else
    logMessage "\n- failed to install Sys-Statistics-Linux\n"
fi

if wget --no-http-keep-alive "http://exchange.nagios.org/components/com_mtree/attachment.php?link_id=2516&cf_id=24" -O ${prefix}/usr/lib/nagios/plugins/check_linux_stats.pl; then
    logMessage "\n- successfully install check_linux_stats\n"
else
    logMessage "\n- failed to install check_linux_stats\n"
fi

if chmod 755 ${prefix}/usr/lib/nagios/plugins/check_linux_stats.pl; then
    logMessage "\n- successfully change rite 755 check_linux_stats\n"
else
    logMessage "\n- failed to change rite 755 check_linux_stats\n"
fi

#if wget --http-user=nagios --http-passwd=Nagios_237K#0Mn http://monitor.opentoken.de/moni/nrpe.cfg -O ${prefix}/etc/nagios/nrpe.cfg; then
#    logMessage "\n- successfully install nrpe.cfg\n"
#else
#    logMessage "\n- failed to install nrpe.cfg\n"
#fi

if chroot ${prefix} /etc/init.d/nagios-nrpe-server stop; then
    logMessage "\n- successfully restart nagios-nrpe-server deamon\n"
else
    logMessage "\n- failed to restart nagios-nrpe-server deamon\n"
fi
#
# # end of Nagios client install
#####################################################################################################################################################
#


#
#----------------------------------------------------------------------------------------------------------------------------------------------------
# install rkhunter
#
#cd ${prefix}/tmp
#if wget --no-http-keep-alive http://sourceforge.net/projects/rkhunter/files/latest/download?source=typ_redirect -O ${prefix}/tmp/rkhunter.tar.gz; then
#    logMessage "\n- successfully download rkhunter\n"
#else
#    logMessage "\n- failed to download rkhunter\n"
#fi

#if mkdir ${prefix}/tmp/rkhunter; then
#    logMessage "\n- successfully mkdir /tmp/rkhunter\n"
#else
#    logMessage "\n- failed to mkdir /tmp/rkhunter\n"
#fi
#
#if tar xzf ${prefix}/tmp/rkhunter.tar.gz -C ${prefix}/tmp/rkhunter --strip-components=1; then
#    logMessage "\n- successfully untar rkhunter\n"
#else
#    logMessage "\n- failed to untar rkhunter\n"
#fi
#
#if sed -i 's|#!/bin/sh|#!/bin/bash|g' ${prefix}/tmp/rkhunter/installer.sh; then
#    logMessage "\n- successfully change script rkhunter\n"
#else
#    logMessage "\n- failed to change script rkhunter\n"
#fi
#
#if cp /usr/lib/xen-tools/hookscripts/subscript/install_rkhunter ${prefix}/tmp/install_rkhunter; then
#    logMessage "\n- successfully cp rkhunter\n"
#else
#    logMessage "\n- failed cp rkhunter\n"
#fi
#
#if chroot ${prefix} /tmp/install_rkhunter; then
#cat <<\EOF >> ${prefix}/etc/rkhunter.conf
#SCRIPTWHITELIST=/usr/sbin/adduser
#SCRIPTWHITELIST=/usr/bin/ldd
#SCRIPTWHITELIST=/usr/sbin/adduser
#SCRIPTWHITELIST=/bin/which
#EOF
#    logMessage "\n- successfully install rkhunter\n"
#else
#    logMessage "\n- failed to install rkhunter\n"
#fi
#
#if sed -i 's|#MAIL-ON-WARNING=me@mydomain   root@mydomain|MAIL-ON-WARNING=jakob.warnow@gmx.de|g' ${prefix}/etc/rkhunter.conf; then
#    logMessage "\n- successfully mail config rkhunter\n"
#else
#    logMessage "\n- failed to mail config rkhunter\n"
#fi#
#
#if sed -i 's|#MAIL_CMD=mail|MAIL_CMD=mail|g' ${prefix}/etc/rkhunter.conf; then
#    logMessage "\n- successfully mail config tool rkhunter\n"
#else
#    logMessage "\n- failed to mail config tool rkhunter\n"
#fi
#
#if sed -i 's|REPORT_EMAIL="root"|REPORT_EMAIL="jakob.warnow@gmx.de"|g' ${prefix}/etc/default/rkhunter; then
#    logMessage "\n- successfully mail config2 rkhunter\n"
#else
#    logMessage "\n- failed to mail config2 rkhunter\n"
#fi#
#
#if chroot ${prefix} /usr/bin/rkhunter --propupd --update; then
#    logMessage "\n- successfully rkhunter propupd and updated\n"
#else
#    logMessage "\n- failed to mail rkhunter propupd and update\n"
#fi
#
#
# install rkhunter finished
#----------------------------------------------------------------------------------------------------------------------------------------------------
#


#
# postfix
#
cp -a /etc/postfix/ ${prefix}/etc/
#cp /etc/postfix/sasl_password ${prefix}/etc/postfix/sasl_password
#cp /etc/postfix/sasl_password.db  ${prefix}/etc/postfix/sasl_password.db

if sed -i "s|matrix.opentoken.de|${hostname}.opentoken.de|g" ${prefix}/etc/postfix/main.cf; then
    logMessage "\n- successfully domain postfix\n"
else
    logMessage "\n- failed to domain postfix\n"
fi


#
# Backup
#

if [ -f /etc/xenbackup.conf ]; then
current_time=$(date "+%H:%M")
cat << EOF >> /etc/xenbackup.conf

[${hostname}]
        period = daily
        time = $current_time
        starttime = '05-09-2014'
        backuptarget  = /mnt/backupftp/
        backuporigin = None
        weekdays = None
        pathtoxenconf = /etc/xen/${hostname}.cfg
EOF

    logMessage "\n- successfully install backup\n"
else
    logMessage "\n- failed to install backup\n"
fi


#
# ssh Login Warning
#

#if [ -f ${prefix}/etc/profile ]; then
cat << 'EOF' > ${prefix}/opt/shell-login.sh
#!/bin/bash

echo "Login auf $(hostname) am $(date +%Y-%m-%d) um $(date +%H:%M)"
echo "Benutzer: $USER"
echo
finger
EOF

cat << EOF >> ${prefix}/etc/profile
/opt/shell-login.sh | mailx -s "SSH Login auf ${hostname}" jakob.warnow@gmx.de
EOF

if chmod 755 ${prefix}/opt/shell-login.sh; then
   	logMessage "\n- successfully chmod shell-login.sh\n"
else
   	logMessage "\n- failed to chmod shell-login.sh\n"
fi
#    logMessage "\n- successfully install shell-login monitorting\n"
#else
#    logMessage "\n- failed to install shell-login monitoring\n"
#fi





logMessage "\n\n\n\n\n\n####################################### \nUser jakob PW:  $pj"
logMessage "####################################### \n\n\n\n\n\n"

#
# Log our finish
#
logMessage Script $0 finished

